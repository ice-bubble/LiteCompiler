

#include "parser.h"

namespace parser {
    void Parser::slrTableInit6() {
        slrTable[{101, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 132};
        slrTable[{101, symbol::Symbol::REAL_}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::STRING}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::BOOL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::BREAK}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::FALSE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::VAR}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::RETURN}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::WHILE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::NIL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::STRING_}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::TRUE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::MINUS}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::IF}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::CHAR}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::INT_}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::FOR}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::NOT}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::ELSE}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::COMMA}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::OR}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::AND}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::LESS}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::GREATER}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::PLUS}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::DIV}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::STAR}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::MOD}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::program}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::declarations}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::declaration}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::statement}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::funDecl}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::varDecl}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::varDef}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::varDefs}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::varInit}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::type}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::forStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::block}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::paramList}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::parameters}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::parameter}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::expression}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::assignment}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::logic_or}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::logic_and}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::equality}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::comparison}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::term}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::term_prime}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::factor}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::incr_op}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::unary}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::call}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::argList}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::arguments}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::primary}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::constVal}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::var}] = {symbol::Type::Error, 101};
        slrTable[{101, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 101};

        slrTable[{102, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::REAL_}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::STRING}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::BOOL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::BREAK}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::FALSE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::VAR}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::RETURN}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::WHILE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::NIL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::STRING_}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::TRUE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::MINUS}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::IF}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::CHAR}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::INT_}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::FOR}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::NOT}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::ELSE}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::COMMA}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Shift, 133};
        slrTable[{102, symbol::Symbol::OR}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::AND}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::LESS}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::GREATER}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::PLUS}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::DIV}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::STAR}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::MOD}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::program}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::declarations}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::declaration}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::statement}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::funDecl}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::varDecl}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::varDef}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::varDefs}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::varInit}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::type}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::forStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::block}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::paramList}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::parameters}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::parameter}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::expression}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::assignment}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::logic_or}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::logic_and}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::equality}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::comparison}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::term}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::term_prime}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::factor}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::incr_op}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::unary}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::call}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::argList}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::arguments}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::primary}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::constVal}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::var}] = {symbol::Type::Error, 102};
        slrTable[{102, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 102};

        slrTable[{103, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::REAL_}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::STRING}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::BOOL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 134};
        slrTable[{103, symbol::Symbol::BREAK}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::FALSE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::VAR}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::RETURN}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::WHILE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::NIL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::STRING_}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::TRUE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::MINUS}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::IF}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::CHAR}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::INT_}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::FOR}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::NOT}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::ELSE}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::COMMA}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::OR}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::AND}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::LESS}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::GREATER}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::PLUS}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::DIV}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::STAR}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::MOD}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::program}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::declarations}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::declaration}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::statement}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::funDecl}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::varDecl}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::varDef}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::varDefs}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::varInit}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::type}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::forStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::block}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::paramList}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::parameters}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::parameter}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::expression}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::assignment}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::logic_or}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::logic_and}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::equality}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::comparison}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::term}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::term_prime}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::factor}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::incr_op}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::unary}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::call}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::argList}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::arguments}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::primary}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::constVal}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::var}] = {symbol::Type::Error, 103};
        slrTable[{103, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 103};

        slrTable[{104, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::REAL_}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::STRING}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::BOOL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Shift, 62};
        slrTable[{104, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::BREAK}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::FALSE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::VAR}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::RETURN}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::WHILE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::NIL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::STRING_}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::TRUE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::MINUS}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::IF}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::CHAR}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::INT_}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::FOR}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::NOT}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::ELSE}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::COMMA}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::OR}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::AND}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::LESS}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::GREATER}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::PLUS}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::DIV}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::STAR}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::MOD}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::program}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::declarations}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::declaration}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::statement}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::funDecl}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::varDecl}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::varDef}] = {symbol::Type::Goto, 135};
        slrTable[{104, symbol::Symbol::varDefs}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::varInit}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::type}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::forStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::block}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::paramList}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::parameters}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::parameter}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::expression}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::assignment}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::logic_or}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::logic_and}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::equality}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::comparison}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::term}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::term_prime}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::factor}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::incr_op}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::unary}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::call}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::argList}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::arguments}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::primary}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::constVal}] = {symbol::Type::Error, 104};
        slrTable[{104, symbol::Symbol::var}] = {symbol::Type::Goto, 61};
        slrTable[{104, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 104};

        slrTable[{105, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::IF}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::OR}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::AND}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::program}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::statement}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::type}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::block}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::expression}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::equality}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::term}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::factor}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::unary}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::call}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::argList}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::primary}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::var}] = {symbol::Type::Reduce, 21};
        slrTable[{105, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 21};

        slrTable[{106, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 49};
        slrTable[{106, symbol::Symbol::REAL_}] = {symbol::Type::Shift, 54};
        slrTable[{106, symbol::Symbol::STRING}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::BOOL}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Shift, 62};
        slrTable[{106, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::BREAK}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::FALSE}] = {symbol::Type::Shift, 51};
        slrTable[{106, symbol::Symbol::VAR}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::RETURN}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::WHILE}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::NIL}] = {symbol::Type::Shift, 52};
        slrTable[{106, symbol::Symbol::STRING_}] = {symbol::Type::Shift, 55};
        slrTable[{106, symbol::Symbol::TRUE}] = {symbol::Type::Shift, 50};
        slrTable[{106, symbol::Symbol::MINUS}] = {symbol::Type::Shift, 45};
        slrTable[{106, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::IF}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::CHAR}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::INT_}] = {symbol::Type::Shift, 53};
        slrTable[{106, symbol::Symbol::FOR}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::NOT}] = {symbol::Type::Shift, 44};
        slrTable[{106, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::ELSE}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::COMMA}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::OR}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::AND}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::LESS}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::GREATER}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::PLUS}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::DIV}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::STAR}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::MOD}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::program}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::declarations}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::declaration}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::statement}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::funDecl}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::varDecl}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::varDef}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::varDefs}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::varInit}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::type}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::forStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::block}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::paramList}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::parameters}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::parameter}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::expression}] = {symbol::Type::Goto, 136};
        slrTable[{106, symbol::Symbol::assignment}] = {symbol::Type::Goto, 34};
        slrTable[{106, symbol::Symbol::logic_or}] = {symbol::Type::Goto, 36};
        slrTable[{106, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::logic_and}] = {symbol::Type::Goto, 37};
        slrTable[{106, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::equality}] = {symbol::Type::Goto, 38};
        slrTable[{106, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::comparison}] = {symbol::Type::Goto, 39};
        slrTable[{106, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::term}] = {symbol::Type::Goto, 40};
        slrTable[{106, symbol::Symbol::term_prime}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::factor}] = {symbol::Type::Goto, 41};
        slrTable[{106, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::incr_exp}] = {symbol::Type::Goto, 42};
        slrTable[{106, symbol::Symbol::incr_op}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::unary}] = {symbol::Type::Goto, 43};
        slrTable[{106, symbol::Symbol::call}] = {symbol::Type::Goto, 46};
        slrTable[{106, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::argList}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::arguments}] = {symbol::Type::Error, 106};
        slrTable[{106, symbol::Symbol::primary}] = {symbol::Type::Goto, 47};
        slrTable[{106, symbol::Symbol::constVal}] = {symbol::Type::Goto, 48};
        slrTable[{106, symbol::Symbol::var}] = {symbol::Type::Goto, 35};
        slrTable[{106, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 106};

        slrTable[{107, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::REAL_}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::STRING}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::BOOL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::BREAK}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::FALSE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::VAR}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::RETURN}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::WHILE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::NIL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::STRING_}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::TRUE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::MINUS}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::IF}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::CHAR}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::INT_}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::FOR}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::NOT}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::ELSE}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::COMMA}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Shift, 137};
        slrTable[{107, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::OR}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::AND}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::LESS}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::GREATER}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::PLUS}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::DIV}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::STAR}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::MOD}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::program}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::declarations}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::declaration}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::statement}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::funDecl}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::varDecl}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::varDef}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::varDefs}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::varInit}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::type}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::forStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::block}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::paramList}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::parameters}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::parameter}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::expression}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::assignment}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::logic_or}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::logic_and}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::equality}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::comparison}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::term}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::term_prime}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::factor}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::incr_op}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::unary}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::call}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::argList}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::arguments}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::primary}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::constVal}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::var}] = {symbol::Type::Error, 107};
        slrTable[{107, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 107};

        slrTable[{108, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::REAL_}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::STRING}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::BOOL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::BREAK}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::FALSE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::VAR}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::RETURN}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::WHILE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::NIL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::STRING_}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::TRUE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::MINUS}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::IF}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::CHAR}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::INT_}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::FOR}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::NOT}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::ELSE}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::COMMA}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Shift, 138};
        slrTable[{108, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::OR}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::AND}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::LESS}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::GREATER}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::PLUS}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::DIV}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::STAR}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::MOD}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::program}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::declarations}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::declaration}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::statement}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::funDecl}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::varDecl}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::varDef}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::varDefs}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::varInit}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::type}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::forStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::block}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::paramList}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::parameters}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::parameter}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::expression}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::assignment}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::logic_or}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::logic_and}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::equality}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::comparison}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::term}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::term_prime}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::factor}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::incr_op}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::unary}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::call}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::argList}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::arguments}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::primary}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::constVal}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::var}] = {symbol::Type::Error, 108};
        slrTable[{108, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 108};

        slrTable[{109, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 139};
        slrTable[{109, symbol::Symbol::REAL_}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::STRING}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::BOOL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::BREAK}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::FALSE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::VAR}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::RETURN}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::WHILE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::NIL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::STRING_}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::TRUE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::MINUS}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::IF}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::CHAR}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::INT_}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::FOR}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::NOT}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::ELSE}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::COMMA}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::OR}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::AND}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::LESS}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::GREATER}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::PLUS}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::DIV}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::STAR}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::MOD}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::program}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::declarations}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::declaration}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::statement}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::funDecl}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::varDecl}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::varDef}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::varDefs}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::varInit}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::type}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::forStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::block}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::paramList}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::parameters}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::parameter}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::expression}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::assignment}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::logic_or}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::logic_and}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::equality}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::comparison}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::term}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::term_prime}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::factor}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::incr_op}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::unary}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::call}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::argList}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::arguments}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::primary}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::constVal}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::var}] = {symbol::Type::Error, 109};
        slrTable[{109, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 109};

        slrTable[{110, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::IF}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::OR}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::AND}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::program}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::statement}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::type}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::block}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::expression}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::equality}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::term}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::factor}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::unary}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::call}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::argList}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::primary}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::var}] = {symbol::Type::Reduce, 42};
        slrTable[{110, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 42};

        slrTable[{111, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 49};
        slrTable[{111, symbol::Symbol::REAL_}] = {symbol::Type::Shift, 54};
        slrTable[{111, symbol::Symbol::STRING}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::BOOL}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Shift, 62};
        slrTable[{111, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 28};
        slrTable[{111, symbol::Symbol::BREAK}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::FALSE}] = {symbol::Type::Shift, 51};
        slrTable[{111, symbol::Symbol::VAR}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::RETURN}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::WHILE}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::NIL}] = {symbol::Type::Shift, 52};
        slrTable[{111, symbol::Symbol::STRING_}] = {symbol::Type::Shift, 55};
        slrTable[{111, symbol::Symbol::TRUE}] = {symbol::Type::Shift, 50};
        slrTable[{111, symbol::Symbol::MINUS}] = {symbol::Type::Shift, 45};
        slrTable[{111, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::IF}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::CHAR}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::INT_}] = {symbol::Type::Shift, 53};
        slrTable[{111, symbol::Symbol::FOR}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::NOT}] = {symbol::Type::Shift, 44};
        slrTable[{111, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::ELSE}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::COMMA}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::OR}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::AND}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::LESS}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::GREATER}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::PLUS}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::DIV}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::STAR}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::MOD}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::program}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::declarations}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::declaration}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::statement}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::funDecl}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::varDecl}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::varDef}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::varDefs}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::varInit}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::type}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::exprStmt}] = {symbol::Type::Goto, 140};
        slrTable[{111, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::forStmt}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::block}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::paramList}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::parameters}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::parameter}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::expression}] = {symbol::Type::Goto, 27};
        slrTable[{111, symbol::Symbol::assignment}] = {symbol::Type::Goto, 34};
        slrTable[{111, symbol::Symbol::logic_or}] = {symbol::Type::Goto, 36};
        slrTable[{111, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::logic_and}] = {symbol::Type::Goto, 37};
        slrTable[{111, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::equality}] = {symbol::Type::Goto, 38};
        slrTable[{111, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::comparison}] = {symbol::Type::Goto, 39};
        slrTable[{111, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::term}] = {symbol::Type::Goto, 40};
        slrTable[{111, symbol::Symbol::term_prime}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::factor}] = {symbol::Type::Goto, 41};
        slrTable[{111, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::incr_exp}] = {symbol::Type::Goto, 42};
        slrTable[{111, symbol::Symbol::incr_op}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::unary}] = {symbol::Type::Goto, 43};
        slrTable[{111, symbol::Symbol::call}] = {symbol::Type::Goto, 46};
        slrTable[{111, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::argList}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::arguments}] = {symbol::Type::Error, 111};
        slrTable[{111, symbol::Symbol::primary}] = {symbol::Type::Goto, 47};
        slrTable[{111, symbol::Symbol::constVal}] = {symbol::Type::Goto, 48};
        slrTable[{111, symbol::Symbol::var}] = {symbol::Type::Goto, 35};
        slrTable[{111, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 111};

        slrTable[{112, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 49};
        slrTable[{112, symbol::Symbol::REAL_}] = {symbol::Type::Shift, 54};
        slrTable[{112, symbol::Symbol::STRING}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::BOOL}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Shift, 62};
        slrTable[{112, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 28};
        slrTable[{112, symbol::Symbol::BREAK}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::FALSE}] = {symbol::Type::Shift, 51};
        slrTable[{112, symbol::Symbol::VAR}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::RETURN}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::WHILE}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::NIL}] = {symbol::Type::Shift, 52};
        slrTable[{112, symbol::Symbol::STRING_}] = {symbol::Type::Shift, 55};
        slrTable[{112, symbol::Symbol::TRUE}] = {symbol::Type::Shift, 50};
        slrTable[{112, symbol::Symbol::MINUS}] = {symbol::Type::Shift, 45};
        slrTable[{112, symbol::Symbol::INTEGER}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::REPEAT}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::IF}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::CHAR}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::INT_}] = {symbol::Type::Shift, 53};
        slrTable[{112, symbol::Symbol::FOR}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::NOT}] = {symbol::Type::Shift, 44};
        slrTable[{112, symbol::Symbol::UNTIL}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::ELSE}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::COMMA}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::OR}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::AND}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::LESS}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::GREATER}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::PLUS}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::DIV}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::STAR}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::MOD}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::EQUAL}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::program}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::declarations}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::declaration}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::statement}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::breakStmt}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::continueStmt}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::returnStmt}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::funDecl}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::varDecl}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::varDef}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::varDefs}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::varInit}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::type}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::ifStmt}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::elseBranch}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::exprStmt}] = {symbol::Type::Goto, 141};
        slrTable[{112, symbol::Symbol::whileStmt}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::forStmt}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::block}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::paramList}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::parameters}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::parameter}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::expression}] = {symbol::Type::Goto, 27};
        slrTable[{112, symbol::Symbol::assignment}] = {symbol::Type::Goto, 34};
        slrTable[{112, symbol::Symbol::logic_or}] = {symbol::Type::Goto, 36};
        slrTable[{112, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::logic_and}] = {symbol::Type::Goto, 37};
        slrTable[{112, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::equality}] = {symbol::Type::Goto, 38};
        slrTable[{112, symbol::Symbol::equality_prime}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::comparison}] = {symbol::Type::Goto, 39};
        slrTable[{112, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::term}] = {symbol::Type::Goto, 40};
        slrTable[{112, symbol::Symbol::term_prime}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::factor}] = {symbol::Type::Goto, 41};
        slrTable[{112, symbol::Symbol::factor_prime}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::incr_exp}] = {symbol::Type::Goto, 42};
        slrTable[{112, symbol::Symbol::incr_op}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::unary}] = {symbol::Type::Goto, 43};
        slrTable[{112, symbol::Symbol::call}] = {symbol::Type::Goto, 46};
        slrTable[{112, symbol::Symbol::call_suffix}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::argList}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::arguments}] = {symbol::Type::Error, -1};
        slrTable[{112, symbol::Symbol::primary}] = {symbol::Type::Goto, 47};
        slrTable[{112, symbol::Symbol::constVal}] = {symbol::Type::Goto, 48};
        slrTable[{112, symbol::Symbol::var}] = {symbol::Type::Goto, 35};
        slrTable[{112, symbol::Symbol::varSuffix}] = {symbol::Type::Error, -1};

        slrTable[{113, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::IF}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::OR}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::AND}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::program}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::statement}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::type}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::block}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::expression}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::equality}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::term}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::factor}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::unary}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::call}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::argList}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::primary}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::var}] = {symbol::Type::Reduce, 50};
        slrTable[{113, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 50};

        slrTable[{114, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::IF}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::OR}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::AND}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::program}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::statement}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::type}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::block}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::expression}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::equality}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::term}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::factor}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::unary}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::call}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::argList}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::primary}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::var}] = {symbol::Type::Reduce, 53};
        slrTable[{114, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 53};

        slrTable[{115, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::IF}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::OR}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::AND}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::program}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::statement}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::type}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::block}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::expression}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::equality}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::term}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::factor}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::unary}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::call}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::argList}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::primary}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::var}] = {symbol::Type::Reduce, 56};
        slrTable[{115, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 56};

        slrTable[{116, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::IF}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::OR}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::AND}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::program}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::statement}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::type}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::block}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::expression}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::equality}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::term}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::factor}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::unary}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::call}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::argList}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::primary}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::var}] = {symbol::Type::Reduce, 59};
        slrTable[{116, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 59};

        slrTable[{117, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::IF}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::OR}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::AND}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::program}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::statement}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::type}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::block}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::expression}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::equality}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::term}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::factor}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::unary}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::call}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::argList}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::primary}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::var}] = {symbol::Type::Reduce, 60};
        slrTable[{117, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 60};

        slrTable[{118, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::IF}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::OR}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::AND}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::program}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::statement}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::type}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::block}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::expression}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::equality}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::term}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::factor}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::unary}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::call}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::argList}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::primary}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::var}] = {symbol::Type::Reduce, 63};
        slrTable[{118, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 63};

        slrTable[{119, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::IF}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::OR}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::AND}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::program}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::statement}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::type}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::block}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::expression}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::equality}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::term}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::factor}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::unary}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::call}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::argList}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::primary}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::var}] = {symbol::Type::Reduce, 64};
        slrTable[{119, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 64};

        slrTable[{120, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::IF}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::OR}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::AND}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::program}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::statement}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::type}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::block}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::expression}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::equality}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::term}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::factor}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::unary}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::call}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::argList}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::primary}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::var}] = {symbol::Type::Reduce, 65};
        slrTable[{120, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 65};
    }
}