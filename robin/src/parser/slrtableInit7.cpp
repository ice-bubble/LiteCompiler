

#include "parser.h"

namespace parser {
    void Parser::slrTableInit7(){
        slrTable[{120,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,65};
        slrTable[{120,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{120,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{121,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,66};
        slrTable[{121,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{121,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{122,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,69};
        slrTable[{122,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{122,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{123,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,70};
        slrTable[{123,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{123,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{124,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::PLUS}]= {symbol::Type::Reduce ,73};
        slrTable[{124,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{124,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{125,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::PLUS}]= {symbol::Type::Reduce ,74};
        slrTable[{125,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{125,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{126,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::PLUS}]= {symbol::Type::Reduce ,75};
        slrTable[{126,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{126,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{127,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::PLUS}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::DIV}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::STAR}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::MOD}]= {symbol::Type::Reduce ,78};
        slrTable[{127,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{127,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{128,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::PLUS}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::DIV}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::STAR}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::MOD}]= {symbol::Type::Reduce ,79};
        slrTable[{128,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{128,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{129,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::COMMA}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Shift ,142};
        slrTable[{129,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{129,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{130,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::COMMA}]= {symbol::Type::Shift ,144};
        slrTable[{130,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,90};
        slrTable[{130,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::arguments}]= {symbol::Type::Goto ,143};
        slrTable[{130,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{130,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{131,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::PLUS}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::DIV}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::STAR}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::MOD}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Reduce ,92};
        slrTable[{131,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{131,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{132,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::STRING}]= {symbol::Type::Shift ,20};
        slrTable[{132,  symbol::Symbol::BOOL}]= {symbol::Type::Shift ,21};
        slrTable[{132,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::VAR}]= {symbol::Type::Shift ,23};
        slrTable[{132,  symbol::Symbol::DOUBLE}]= {symbol::Type::Shift ,19};
        slrTable[{132,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::INTEGER}]= {symbol::Type::Shift ,18};
        slrTable[{132,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::CHAR}]= {symbol::Type::Shift ,22};
        slrTable[{132,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::COMMA}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,45};
        slrTable[{132,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::type}]= {symbol::Type::Goto ,147};
        slrTable[{132,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::paramList}]= {symbol::Type::Goto ,145};
        slrTable[{132,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::parameter}]= {symbol::Type::Goto ,146};
        slrTable[{132,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{132,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{133,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Shift ,59};
        slrTable[{133,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::OR}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::AND}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::LESS}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::GREATER}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::PLUS}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::DIV}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::STAR}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::MOD}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::EQUAL}]= {symbol::Type::Reduce ,102};
        slrTable[{133,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{133,  symbol::Symbol::varSuffix}]= {symbol::Type::Goto ,148};

        slrTable[{134,  symbol::Symbol::DOLLAR}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::REAL_}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::STRING}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::BOOL}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::CONTINUE}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::BREAK}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::FALSE}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::VAR}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::DOUBLE}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::RETURN}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::WHILE}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::NIL}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::STRING_}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::TRUE}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::MINUS}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::INTEGER}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::REPEAT}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::IF}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::CHAR}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::INT_}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::FOR}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::NOT}]= {symbol::Type::Reduce ,20};
        slrTable[{134,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::COMMA}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{134,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{135,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,23};
        slrTable[{135,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::COMMA}]= {symbol::Type::Shift ,104};
        slrTable[{135,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::varDefs}]= {symbol::Type::Goto ,149};
        slrTable[{135,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{135,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{136,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::REAL_}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Reduce ,24};
        slrTable[{136,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::FALSE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::NIL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::STRING_}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::TRUE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::MINUS}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::INT_}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::NOT}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::COMMA}]= {symbol::Type::Reduce ,24};
        slrTable[{136,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::expression}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::assignment}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::logic_or}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::logic_and}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::equality}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::comparison}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::term}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::factor}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::incr_exp}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::unary}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::call}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::primary}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::constVal}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::var}]= {symbol::Type::Error ,0};
        slrTable[{136,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{137,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Shift ,49};
        slrTable[{137,  symbol::Symbol::REAL_}]= {symbol::Type::Shift ,54};
        slrTable[{137,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Shift ,62};
        slrTable[{137,  symbol::Symbol::CONTINUE}]= {symbol::Type::Shift ,25};
        slrTable[{137,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Shift ,28};
        slrTable[{137,  symbol::Symbol::BREAK}]= {symbol::Type::Shift ,24};
        slrTable[{137,  symbol::Symbol::FALSE}]= {symbol::Type::Shift ,51};
        slrTable[{137,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Shift ,32};
        slrTable[{137,  symbol::Symbol::RETURN}]= {symbol::Type::Shift ,26};
        slrTable[{137,  symbol::Symbol::WHILE}]= {symbol::Type::Shift ,30};
        slrTable[{137,  symbol::Symbol::NIL}]= {symbol::Type::Shift ,52};
        slrTable[{137,  symbol::Symbol::STRING_}]= {symbol::Type::Shift ,55};
        slrTable[{137,  symbol::Symbol::TRUE}]= {symbol::Type::Shift ,50};
        slrTable[{137,  symbol::Symbol::MINUS}]= {symbol::Type::Shift ,45};
        slrTable[{137,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::REPEAT}]= {symbol::Type::Shift ,31};
        slrTable[{137,  symbol::Symbol::IF}]= {symbol::Type::Shift ,29};
        slrTable[{137,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::INT_}]= {symbol::Type::Shift ,53};
        slrTable[{137,  symbol::Symbol::FOR}]= {symbol::Type::Shift ,33};
        slrTable[{137,  symbol::Symbol::NOT}]= {symbol::Type::Shift ,44};
        slrTable[{137,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::COMMA}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::statement}]= {symbol::Type::Goto ,150};
        slrTable[{137,  symbol::Symbol::breakStmt}]= {symbol::Type::Goto ,9};
        slrTable[{137,  symbol::Symbol::continueStmt}]= {symbol::Type::Goto ,10};
        slrTable[{137,  symbol::Symbol::returnStmt}]= {symbol::Type::Goto ,11};
        slrTable[{137,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::ifStmt}]= {symbol::Type::Goto ,13};
        slrTable[{137,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::exprStmt}]= {symbol::Type::Goto ,12};
        slrTable[{137,  symbol::Symbol::whileStmt}]= {symbol::Type::Goto ,14};
        slrTable[{137,  symbol::Symbol::forStmt}]= {symbol::Type::Goto ,17};
        slrTable[{137,  symbol::Symbol::block}]= {symbol::Type::Goto ,16};
        slrTable[{137,  symbol::Symbol::repeatStmt}]= {symbol::Type::Goto ,15};
        slrTable[{137,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::expression}]= {symbol::Type::Goto ,27};
        slrTable[{137,  symbol::Symbol::assignment}]= {symbol::Type::Goto ,34};
        slrTable[{137,  symbol::Symbol::logic_or}]= {symbol::Type::Goto ,36};
        slrTable[{137,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::logic_and}]= {symbol::Type::Goto ,37};
        slrTable[{137,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::equality}]= {symbol::Type::Goto ,38};
        slrTable[{137,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::comparison}]= {symbol::Type::Goto ,39};
        slrTable[{137,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::term}]= {symbol::Type::Goto ,40};
        slrTable[{137,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::factor}]= {symbol::Type::Goto ,41};
        slrTable[{137,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::incr_exp}]= {symbol::Type::Goto ,42};
        slrTable[{137,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::unary}]= {symbol::Type::Goto ,43};
        slrTable[{137,  symbol::Symbol::call}]= {symbol::Type::Goto ,46};
        slrTable[{137,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{137,  symbol::Symbol::primary}]= {symbol::Type::Goto ,47};
        slrTable[{137,  symbol::Symbol::constVal}]= {symbol::Type::Goto ,48};
        slrTable[{137,  symbol::Symbol::var}]= {symbol::Type::Goto ,35};
        slrTable[{137,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{138,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Shift ,49};
        slrTable[{138,  symbol::Symbol::REAL_}]= {symbol::Type::Shift ,54};
        slrTable[{138,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Shift ,62};
        slrTable[{138,  symbol::Symbol::CONTINUE}]= {symbol::Type::Shift ,25};
        slrTable[{138,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Shift ,28};
        slrTable[{138,  symbol::Symbol::BREAK}]= {symbol::Type::Shift ,24};
        slrTable[{138,  symbol::Symbol::FALSE}]= {symbol::Type::Shift ,51};
        slrTable[{138,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Shift ,32};
        slrTable[{138,  symbol::Symbol::RETURN}]= {symbol::Type::Shift ,26};
        slrTable[{138,  symbol::Symbol::WHILE}]= {symbol::Type::Shift ,30};
        slrTable[{138,  symbol::Symbol::NIL}]= {symbol::Type::Shift ,52};
        slrTable[{138,  symbol::Symbol::STRING_}]= {symbol::Type::Shift ,55};
        slrTable[{138,  symbol::Symbol::TRUE}]= {symbol::Type::Shift ,50};
        slrTable[{138,  symbol::Symbol::MINUS}]= {symbol::Type::Shift ,45};
        slrTable[{138,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::REPEAT}]= {symbol::Type::Shift ,31};
        slrTable[{138,  symbol::Symbol::IF}]= {symbol::Type::Shift ,29};
        slrTable[{138,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::INT_}]= {symbol::Type::Shift ,53};
        slrTable[{138,  symbol::Symbol::FOR}]= {symbol::Type::Shift ,33};
        slrTable[{138,  symbol::Symbol::NOT}]= {symbol::Type::Shift ,44};
        slrTable[{138,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::COMMA}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::statement}]= {symbol::Type::Goto ,151};
        slrTable[{138,  symbol::Symbol::breakStmt}]= {symbol::Type::Goto ,9};
        slrTable[{138,  symbol::Symbol::continueStmt}]= {symbol::Type::Goto ,10};
        slrTable[{138,  symbol::Symbol::returnStmt}]= {symbol::Type::Goto ,11};
        slrTable[{138,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::ifStmt}]= {symbol::Type::Goto ,13};
        slrTable[{138,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::exprStmt}]= {symbol::Type::Goto ,12};
        slrTable[{138,  symbol::Symbol::whileStmt}]= {symbol::Type::Goto ,14};
        slrTable[{138,  symbol::Symbol::forStmt}]= {symbol::Type::Goto ,17};
        slrTable[{138,  symbol::Symbol::block}]= {symbol::Type::Goto ,16};
        slrTable[{138,  symbol::Symbol::repeatStmt}]= {symbol::Type::Goto ,15};
        slrTable[{138,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::expression}]= {symbol::Type::Goto ,27};
        slrTable[{138,  symbol::Symbol::assignment}]= {symbol::Type::Goto ,34};
        slrTable[{138,  symbol::Symbol::logic_or}]= {symbol::Type::Goto ,36};
        slrTable[{138,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::logic_and}]= {symbol::Type::Goto ,37};
        slrTable[{138,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::equality}]= {symbol::Type::Goto ,38};
        slrTable[{138,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::comparison}]= {symbol::Type::Goto ,39};
        slrTable[{138,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::term}]= {symbol::Type::Goto ,40};
        slrTable[{138,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::factor}]= {symbol::Type::Goto ,41};
        slrTable[{138,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::incr_exp}]= {symbol::Type::Goto ,42};
        slrTable[{138,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::unary}]= {symbol::Type::Goto ,43};
        slrTable[{138,  symbol::Symbol::call}]= {symbol::Type::Goto ,46};
        slrTable[{138,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{138,  symbol::Symbol::primary}]= {symbol::Type::Goto ,47};
        slrTable[{138,  symbol::Symbol::constVal}]= {symbol::Type::Goto ,48};
        slrTable[{138,  symbol::Symbol::var}]= {symbol::Type::Goto ,35};
        slrTable[{138,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};

        slrTable[{139,  symbol::Symbol::DOLLAR}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::LEFT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::RIGHT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::LEFT_PAREN}]= {symbol::Type::Shift ,49};
        slrTable[{139,  symbol::Symbol::REAL_}]= {symbol::Type::Shift ,54};
        slrTable[{139,  symbol::Symbol::STRING}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::BOOL}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::IDENTIFIER}]= {symbol::Type::Shift ,62};
        slrTable[{139,  symbol::Symbol::CONTINUE}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::SEMICOLON}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::BREAK}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::FALSE}]= {symbol::Type::Shift ,51};
        slrTable[{139,  symbol::Symbol::VAR}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::DOUBLE}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::LEFT_BRACE}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::RETURN}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::WHILE}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::NIL}]= {symbol::Type::Shift ,52};
        slrTable[{139,  symbol::Symbol::STRING_}]= {symbol::Type::Shift ,55};
        slrTable[{139,  symbol::Symbol::TRUE}]= {symbol::Type::Shift ,50};
        slrTable[{139,  symbol::Symbol::MINUS}]= {symbol::Type::Shift ,45};
        slrTable[{139,  symbol::Symbol::INTEGER}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::REPEAT}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::IF}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::CHAR}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::INT_}]= {symbol::Type::Shift ,53};
        slrTable[{139,  symbol::Symbol::FOR}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::NOT}]= {symbol::Type::Shift ,44};
        slrTable[{139,  symbol::Symbol::UNTIL}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::ELSE}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::COMMA}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::RIGHT_PAREN}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::RIGHT_BRACKET}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::OR}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::AND}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::NOT_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::EQUAL_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::LESS_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::LESS}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::GREATER_EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::GREATER}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::PLUS}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::DIV}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::STAR}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::MOD}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::DOUBLE_ADD}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::DOUBLE_MINUS}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::EQUAL}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::FUNCTION}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::program}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::declarations}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::declaration}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::statement}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::breakStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::continueStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::returnStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::funDecl}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::varDecl}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::varDef}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::varDefs}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::varInit}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::type}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::ifStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::elseBranch}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::exprStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::whileStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::forStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::block}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::repeatStmt}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::paramList}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::parameters}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::parameter}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::expression}]= {symbol::Type::Goto ,152};
        slrTable[{139,  symbol::Symbol::assignment}]= {symbol::Type::Goto ,34};
        slrTable[{139,  symbol::Symbol::logic_or}]= {symbol::Type::Goto ,36};
        slrTable[{139,  symbol::Symbol::logic_or_prime}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::logic_and}]= {symbol::Type::Goto ,37};
        slrTable[{139,  symbol::Symbol::logic_and_prime}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::equality}]= {symbol::Type::Goto ,38};
        slrTable[{139,  symbol::Symbol::equality_prime}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::comparison}]= {symbol::Type::Goto ,39};
        slrTable[{139,  symbol::Symbol::comparison_prime}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::term}]= {symbol::Type::Goto ,40};
        slrTable[{139,  symbol::Symbol::term_prime}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::factor}]= {symbol::Type::Goto ,41};
        slrTable[{139,  symbol::Symbol::factor_prime}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::incr_exp}]= {symbol::Type::Goto ,42};
        slrTable[{139,  symbol::Symbol::incr_op}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::unary}]= {symbol::Type::Goto ,43};
        slrTable[{139,  symbol::Symbol::call}]= {symbol::Type::Goto ,46};
        slrTable[{139,  symbol::Symbol::call_suffix}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::argList}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::arguments}]= {symbol::Type::Error ,0};
        slrTable[{139,  symbol::Symbol::primary}]= {symbol::Type::Goto ,47};
        slrTable[{139,  symbol::Symbol::constVal}]= {symbol::Type::Goto ,48};
        slrTable[{139,  symbol::Symbol::var}]= {symbol::Type::Goto ,35};
        slrTable[{139,  symbol::Symbol::varSuffix}]= {symbol::Type::Error ,0};
    }
}