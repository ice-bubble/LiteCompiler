#include "parser.h"

namespace parser {
    void Parser::slrTableInit2() {
        slrTable[{21, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::IF}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::OR}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::AND}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::program}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::statement}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::type}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::block}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::expression}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::equality}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::term}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::factor}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::unary}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::call}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::argList}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::primary}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::var}] = {symbol::Type::Reduce, 29};
        slrTable[{21, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 29};

        slrTable[{22, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::IF}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::OR}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::AND}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::program}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::statement}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::type}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::block}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::expression}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::equality}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::term}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::factor}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::unary}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::call}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::argList}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::primary}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::var}] = {symbol::Type::Reduce, 30};
        slrTable[{22, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 30};

        slrTable[{23, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::IF}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::OR}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::AND}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::program}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::statement}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::type}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::block}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::expression}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::equality}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::term}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::factor}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::unary}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::call}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::argList}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::primary}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::var}] = {symbol::Type::Reduce, 31};
        slrTable[{23, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 31};

        slrTable[{24, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::REAL_}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::STRING}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::BOOL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 63};
        slrTable[{24, symbol::Symbol::BREAK}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::FALSE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::VAR}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::RETURN}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::WHILE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::NIL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::STRING_}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::TRUE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::MINUS}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::IF}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::CHAR}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::INT_}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::FOR}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::NOT}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::ELSE}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::COMMA}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::OR}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::AND}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::LESS}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::GREATER}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::PLUS}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::DIV}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::STAR}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::MOD}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::program}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::declarations}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::declaration}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::statement}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::funDecl}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::varDecl}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::varDef}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::varDefs}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::varInit}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::type}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::forStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::block}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::paramList}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::parameters}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::parameter}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::expression}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::assignment}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::logic_or}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::logic_and}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::equality}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::comparison}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::term}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::term_prime}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::factor}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::incr_op}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::unary}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::call}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::argList}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::arguments}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::primary}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::constVal}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::var}] = {symbol::Type::Error, 24};
        slrTable[{24, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 24};

        slrTable[{25, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::REAL_}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::STRING}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::BOOL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 64};
        slrTable[{25, symbol::Symbol::BREAK}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::FALSE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::VAR}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::RETURN}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::WHILE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::NIL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::STRING_}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::TRUE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::MINUS}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::IF}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::CHAR}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::INT_}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::FOR}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::NOT}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::ELSE}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::COMMA}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::OR}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::AND}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::LESS}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::GREATER}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::PLUS}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::DIV}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::STAR}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::MOD}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::program}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::declarations}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::declaration}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::statement}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::funDecl}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::varDecl}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::varDef}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::varDefs}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::varInit}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::type}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::forStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::block}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::paramList}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::parameters}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::parameter}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::expression}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::assignment}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::logic_or}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::logic_and}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::equality}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::comparison}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::term}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::term_prime}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::factor}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::incr_op}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::unary}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::call}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::argList}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::arguments}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::primary}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::constVal}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::var}] = {symbol::Type::Error, 25};
        slrTable[{25, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 25};

        slrTable[{26, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 49};
        slrTable[{26, symbol::Symbol::REAL_}] = {symbol::Type::Shift, 54};
        slrTable[{26, symbol::Symbol::STRING}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::BOOL}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Shift, 62};
        slrTable[{26, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 28};
        slrTable[{26, symbol::Symbol::BREAK}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::FALSE}] = {symbol::Type::Shift, 51};
        slrTable[{26, symbol::Symbol::VAR}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::RETURN}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::WHILE}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::NIL}] = {symbol::Type::Shift, 52};
        slrTable[{26, symbol::Symbol::STRING_}] = {symbol::Type::Shift, 55};
        slrTable[{26, symbol::Symbol::TRUE}] = {symbol::Type::Shift, 50};
        slrTable[{26, symbol::Symbol::MINUS}] = {symbol::Type::Shift, 45};
        slrTable[{26, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::IF}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::CHAR}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::INT_}] = {symbol::Type::Shift, 53};
        slrTable[{26, symbol::Symbol::FOR}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::NOT}] = {symbol::Type::Shift, 44};
        slrTable[{26, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::ELSE}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::COMMA}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::OR}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::AND}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::LESS}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::GREATER}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::PLUS}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::DIV}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::STAR}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::MOD}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::program}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::declarations}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::declaration}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::statement}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::funDecl}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::varDecl}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::varDef}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::varDefs}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::varInit}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::type}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::exprStmt}] = {symbol::Type::Goto, 65};
        slrTable[{26, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::forStmt}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::block}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::paramList}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::parameters}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::parameter}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::expression}] = {symbol::Type::Goto, 27};
        slrTable[{26, symbol::Symbol::assignment}] = {symbol::Type::Goto, 34};
        slrTable[{26, symbol::Symbol::logic_or}] = {symbol::Type::Goto, 36};
        slrTable[{26, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::logic_and}] = {symbol::Type::Goto, 37};
        slrTable[{26, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::equality}] = {symbol::Type::Goto, 38};
        slrTable[{26, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::comparison}] = {symbol::Type::Goto, 39};
        slrTable[{26, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::term}] = {symbol::Type::Goto, 40};
        slrTable[{26, symbol::Symbol::term_prime}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::factor}] = {symbol::Type::Goto, 41};
        slrTable[{26, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::incr_exp}] = {symbol::Type::Goto, 42};
        slrTable[{26, symbol::Symbol::incr_op}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::unary}] = {symbol::Type::Goto, 43};
        slrTable[{26, symbol::Symbol::call}] = {symbol::Type::Goto, 46};
        slrTable[{26, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::argList}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::arguments}] = {symbol::Type::Error, 26};
        slrTable[{26, symbol::Symbol::primary}] = {symbol::Type::Goto, 47};
        slrTable[{26, symbol::Symbol::constVal}] = {symbol::Type::Goto, 48};
        slrTable[{26, symbol::Symbol::var}] = {symbol::Type::Goto, 35};
        slrTable[{26, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 26};

        slrTable[{27, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::REAL_}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::STRING}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::BOOL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 66};
        slrTable[{27, symbol::Symbol::BREAK}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::FALSE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::VAR}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::RETURN}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::WHILE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::NIL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::STRING_}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::TRUE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::MINUS}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::IF}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::CHAR}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::INT_}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::FOR}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::NOT}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::ELSE}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::COMMA}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::OR}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::AND}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::LESS}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::GREATER}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::PLUS}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::DIV}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::STAR}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::MOD}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::program}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::declarations}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::declaration}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::statement}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::funDecl}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::varDecl}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::varDef}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::varDefs}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::varInit}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::type}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::forStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::block}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::paramList}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::parameters}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::parameter}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::expression}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::assignment}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::logic_or}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::logic_and}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::equality}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::comparison}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::term}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::term_prime}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::factor}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::incr_op}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::unary}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::call}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::argList}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::arguments}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::primary}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::constVal}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::var}] = {symbol::Type::Error, 27};
        slrTable[{27, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 27};

        slrTable[{28, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::IF}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::OR}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::AND}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::program}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::statement}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::type}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::block}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::expression}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::equality}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::term}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::factor}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::unary}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::call}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::argList}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::primary}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::var}] = {symbol::Type::Reduce, 33};
        slrTable[{28, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 33};

        slrTable[{29, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 67};
        slrTable[{29, symbol::Symbol::REAL_}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::STRING}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::BOOL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::BREAK}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::FALSE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::VAR}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::RETURN}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::WHILE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::NIL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::STRING_}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::TRUE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::MINUS}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::IF}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::CHAR}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::INT_}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::FOR}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::NOT}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::ELSE}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::COMMA}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::OR}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::AND}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::LESS}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::GREATER}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::PLUS}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::DIV}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::STAR}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::MOD}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::program}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::declarations}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::declaration}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::statement}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::funDecl}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::varDecl}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::varDef}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::varDefs}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::varInit}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::type}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::forStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::block}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::paramList}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::parameters}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::parameter}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::expression}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::assignment}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::logic_or}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::logic_and}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::equality}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::comparison}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::term}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::term_prime}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::factor}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::incr_op}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::unary}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::call}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::argList}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::arguments}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::primary}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::constVal}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::var}] = {symbol::Type::Error, 29};
        slrTable[{29, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 29};

        slrTable[{30, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 68};
        slrTable[{30, symbol::Symbol::REAL_}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::STRING}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::BOOL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::BREAK}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::FALSE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::VAR}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::RETURN}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::WHILE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::NIL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::STRING_}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::TRUE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::MINUS}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::IF}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::CHAR}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::INT_}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::FOR}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::NOT}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::ELSE}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::COMMA}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::OR}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::AND}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::LESS}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::GREATER}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::PLUS}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::DIV}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::STAR}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::MOD}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::program}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::declarations}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::declaration}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::statement}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::funDecl}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::varDecl}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::varDef}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::varDefs}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::varInit}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::type}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::forStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::block}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::paramList}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::parameters}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::parameter}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::expression}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::assignment}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::logic_or}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::logic_and}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::equality}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::comparison}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::term}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::term_prime}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::factor}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::incr_op}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::unary}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::call}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::argList}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::arguments}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::primary}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::constVal}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::var}] = {symbol::Type::Error, 30};
        slrTable[{30, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 30};

        slrTable[{31, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 49};
        slrTable[{31, symbol::Symbol::REAL_}] = {symbol::Type::Shift, 54};
        slrTable[{31, symbol::Symbol::STRING}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::BOOL}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Shift, 62};
        slrTable[{31, symbol::Symbol::CONTINUE}] = {symbol::Type::Shift, 25};
        slrTable[{31, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 28};
        slrTable[{31, symbol::Symbol::BREAK}] = {symbol::Type::Shift, 24};
        slrTable[{31, symbol::Symbol::FALSE}] = {symbol::Type::Shift, 51};
        slrTable[{31, symbol::Symbol::VAR}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Shift, 32};
        slrTable[{31, symbol::Symbol::RETURN}] = {symbol::Type::Shift, 26};
        slrTable[{31, symbol::Symbol::WHILE}] = {symbol::Type::Shift, 30};
        slrTable[{31, symbol::Symbol::NIL}] = {symbol::Type::Shift, 52};
        slrTable[{31, symbol::Symbol::STRING_}] = {symbol::Type::Shift, 55};
        slrTable[{31, symbol::Symbol::TRUE}] = {symbol::Type::Shift, 50};
        slrTable[{31, symbol::Symbol::MINUS}] = {symbol::Type::Shift, 45};
        slrTable[{31, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::REPEAT}] = {symbol::Type::Shift, 31};
        slrTable[{31, symbol::Symbol::IF}] = {symbol::Type::Shift, 29};
        slrTable[{31, symbol::Symbol::CHAR}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::INT_}] = {symbol::Type::Shift, 53};
        slrTable[{31, symbol::Symbol::FOR}] = {symbol::Type::Shift, 33};
        slrTable[{31, symbol::Symbol::NOT}] = {symbol::Type::Shift, 44};
        slrTable[{31, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::ELSE}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::COMMA}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::OR}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::AND}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::LESS}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::GREATER}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::PLUS}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::DIV}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::STAR}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::MOD}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::program}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::declarations}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::declaration}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::statement}] = {symbol::Type::Goto, 69};
        slrTable[{31, symbol::Symbol::breakStmt}] = {symbol::Type::Goto, 9};
        slrTable[{31, symbol::Symbol::continueStmt}] = {symbol::Type::Goto, 10};
        slrTable[{31, symbol::Symbol::returnStmt}] = {symbol::Type::Goto, 11};
        slrTable[{31, symbol::Symbol::funDecl}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::varDecl}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::varDef}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::varDefs}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::varInit}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::type}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::ifStmt}] = {symbol::Type::Goto, 13};
        slrTable[{31, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::exprStmt}] = {symbol::Type::Goto, 12};
        slrTable[{31, symbol::Symbol::whileStmt}] = {symbol::Type::Goto, 14};
        slrTable[{31, symbol::Symbol::forStmt}] = {symbol::Type::Goto, 17};
        slrTable[{31, symbol::Symbol::block}] = {symbol::Type::Goto, 16};
        slrTable[{31, symbol::Symbol::repeatStmt}] = {symbol::Type::Goto, 15};
        slrTable[{31, symbol::Symbol::paramList}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::parameters}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::parameter}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::expression}] = {symbol::Type::Goto, 27};
        slrTable[{31, symbol::Symbol::assignment}] = {symbol::Type::Goto, 34};
        slrTable[{31, symbol::Symbol::logic_or}] = {symbol::Type::Goto, 36};
        slrTable[{31, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::logic_and}] = {symbol::Type::Goto, 37};
        slrTable[{31, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::equality}] = {symbol::Type::Goto, 38};
        slrTable[{31, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::comparison}] = {symbol::Type::Goto, 39};
        slrTable[{31, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::term}] = {symbol::Type::Goto, 40};
        slrTable[{31, symbol::Symbol::term_prime}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::factor}] = {symbol::Type::Goto, 41};
        slrTable[{31, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::incr_exp}] = {symbol::Type::Goto, 42};
        slrTable[{31, symbol::Symbol::incr_op}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::unary}] = {symbol::Type::Goto, 43};
        slrTable[{31, symbol::Symbol::call}] = {symbol::Type::Goto, 46};
        slrTable[{31, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::argList}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::arguments}] = {symbol::Type::Error, 31};
        slrTable[{31, symbol::Symbol::primary}] = {symbol::Type::Goto, 47};
        slrTable[{31, symbol::Symbol::constVal}] = {symbol::Type::Goto, 48};
        slrTable[{31, symbol::Symbol::var}] = {symbol::Type::Goto, 35};
        slrTable[{31, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 31};

        slrTable[{32, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 49};
        slrTable[{32, symbol::Symbol::REAL_}] = {symbol::Type::Shift, 54};
        slrTable[{32, symbol::Symbol::STRING}] = {symbol::Type::Shift, 20};
        slrTable[{32, symbol::Symbol::BOOL}] = {symbol::Type::Shift, 21};
        slrTable[{32, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Shift, 7};
        slrTable[{32, symbol::Symbol::CONTINUE}] = {symbol::Type::Shift, 25};
        slrTable[{32, symbol::Symbol::SEMICOLON}] = {symbol::Type::Shift, 28};
        slrTable[{32, symbol::Symbol::BREAK}] = {symbol::Type::Shift, 24};
        slrTable[{32, symbol::Symbol::FALSE}] = {symbol::Type::Shift, 51};
        slrTable[{32, symbol::Symbol::VAR}] = {symbol::Type::Shift, 23};
        slrTable[{32, symbol::Symbol::DOUBLE}] = {symbol::Type::Shift, 19};
        slrTable[{32, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Shift, 32};
        slrTable[{32, symbol::Symbol::RETURN}] = {symbol::Type::Shift, 26};
        slrTable[{32, symbol::Symbol::WHILE}] = {symbol::Type::Shift, 30};
        slrTable[{32, symbol::Symbol::NIL}] = {symbol::Type::Shift, 52};
        slrTable[{32, symbol::Symbol::STRING_}] = {symbol::Type::Shift, 55};
        slrTable[{32, symbol::Symbol::TRUE}] = {symbol::Type::Shift, 50};
        slrTable[{32, symbol::Symbol::MINUS}] = {symbol::Type::Shift, 45};
        slrTable[{32, symbol::Symbol::INTEGER}] = {symbol::Type::Shift, 18};
        slrTable[{32, symbol::Symbol::REPEAT}] = {symbol::Type::Shift, 31};
        slrTable[{32, symbol::Symbol::IF}] = {symbol::Type::Shift, 29};
        slrTable[{32, symbol::Symbol::CHAR}] = {symbol::Type::Shift, 22};
        slrTable[{32, symbol::Symbol::INT_}] = {symbol::Type::Shift, 53};
        slrTable[{32, symbol::Symbol::FOR}] = {symbol::Type::Shift, 33};
        slrTable[{32, symbol::Symbol::NOT}] = {symbol::Type::Shift, 44};
        slrTable[{32, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::OR}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::AND}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::program}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::declarations}] = {symbol::Type::Goto, 70};
        slrTable[{32, symbol::Symbol::declaration}] = {symbol::Type::Goto, 3};
        slrTable[{32, symbol::Symbol::statement}] = {symbol::Type::Goto, 6};
        slrTable[{32, symbol::Symbol::breakStmt}] = {symbol::Type::Goto, 9};
        slrTable[{32, symbol::Symbol::continueStmt}] = {symbol::Type::Goto, 10};
        slrTable[{32, symbol::Symbol::returnStmt}] = {symbol::Type::Goto, 11};
        slrTable[{32, symbol::Symbol::funDecl}] = {symbol::Type::Goto, 4};
        slrTable[{32, symbol::Symbol::varDecl}] = {symbol::Type::Goto, 5};
        slrTable[{32, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::type}] = {symbol::Type::Goto, 8};
        slrTable[{32, symbol::Symbol::ifStmt}] = {symbol::Type::Goto, 13};
        slrTable[{32, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::exprStmt}] = {symbol::Type::Goto, 12};
        slrTable[{32, symbol::Symbol::whileStmt}] = {symbol::Type::Goto, 14};
        slrTable[{32, symbol::Symbol::forStmt}] = {symbol::Type::Goto, 17};
        slrTable[{32, symbol::Symbol::block}] = {symbol::Type::Goto, 16};
        slrTable[{32, symbol::Symbol::repeatStmt}] = {symbol::Type::Goto, 15};
        slrTable[{32, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::expression}] = {symbol::Type::Goto, 27};
        slrTable[{32, symbol::Symbol::assignment}] = {symbol::Type::Goto, 34};
        slrTable[{32, symbol::Symbol::logic_or}] = {symbol::Type::Goto, 36};
        slrTable[{32, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::logic_and}] = {symbol::Type::Goto, 37};
        slrTable[{32, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::equality}] = {symbol::Type::Goto, 38};
        slrTable[{32, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::comparison}] = {symbol::Type::Goto, 39};
        slrTable[{32, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::term}] = {symbol::Type::Goto, 40};
        slrTable[{32, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::factor}] = {symbol::Type::Goto, 41};
        slrTable[{32, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::incr_exp}] = {symbol::Type::Goto, 42};
        slrTable[{32, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::unary}] = {symbol::Type::Goto, 43};
        slrTable[{32, symbol::Symbol::call}] = {symbol::Type::Goto, 46};
        slrTable[{32, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::argList}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 3};
        slrTable[{32, symbol::Symbol::primary}] = {symbol::Type::Goto, 47};
        slrTable[{32, symbol::Symbol::constVal}] = {symbol::Type::Goto, 48};
        slrTable[{32, symbol::Symbol::var}] = {symbol::Type::Goto, 35};
        slrTable[{32, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 3};

        slrTable[{33, symbol::Symbol::DOLLAR}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Shift, 71};
        slrTable[{33, symbol::Symbol::REAL_}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::STRING}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::BOOL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::CONTINUE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::SEMICOLON}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::BREAK}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::FALSE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::VAR}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::DOUBLE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::RETURN}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::WHILE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::NIL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::STRING_}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::TRUE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::MINUS}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::INTEGER}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::REPEAT}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::IF}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::CHAR}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::INT_}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::FOR}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::NOT}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::UNTIL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::ELSE}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::COMMA}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::OR}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::AND}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::LESS}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::GREATER}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::PLUS}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::DIV}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::STAR}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::MOD}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::EQUAL}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::FUNCTION}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::program}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::declarations}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::declaration}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::statement}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::breakStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::continueStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::returnStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::funDecl}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::varDecl}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::varDef}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::varDefs}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::varInit}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::type}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::ifStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::elseBranch}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::exprStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::whileStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::forStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::block}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::repeatStmt}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::paramList}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::parameters}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::parameter}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::expression}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::assignment}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::logic_or}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::logic_or_prime}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::logic_and}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::logic_and_prime}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::equality}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::equality_prime}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::comparison}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::comparison_prime}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::term}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::term_prime}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::factor}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::factor_prime}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::incr_exp}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::incr_op}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::unary}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::call}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::call_suffix}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::argList}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::arguments}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::primary}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::constVal}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::var}] = {symbol::Type::Error, 33};
        slrTable[{33, symbol::Symbol::varSuffix}] = {symbol::Type::Error, 33};

        slrTable[{34, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::IF}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::OR}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::AND}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::program}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::statement}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::type}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::block}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::expression}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::equality}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::term}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::factor}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::unary}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::call}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::argList}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::primary}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::var}] = {symbol::Type::Reduce, 49};
        slrTable[{34, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 49};

        slrTable[{35, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::IF}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::OR}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::AND}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::EQUAL}] = {symbol::Type::Shift, 72};
        slrTable[{35, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::program}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::statement}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::type}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::block}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::expression}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::equality}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::term}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::factor}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::unary}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::call}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::argList}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::primary}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::var}] = {symbol::Type::Reduce, 93};
        slrTable[{35, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 93};

        slrTable[{36, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::IF}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::OR}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::AND}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::program}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::statement}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::type}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::block}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::expression}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::equality}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::term}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::factor}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::unary}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::call}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::argList}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::primary}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::var}] = {symbol::Type::Reduce, 51};
        slrTable[{36, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 51};

        slrTable[{37, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::IF}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::OR}] = {symbol::Type::Shift, 74};
        slrTable[{37, symbol::Symbol::AND}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::program}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::statement}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::type}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::block}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::expression}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::logic_or_prime}] = {symbol::Type::Goto, 73};
        slrTable[{37, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::equality}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::term}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::factor}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::unary}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::call}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::argList}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::primary}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::var}] = {symbol::Type::Reduce, 54};
        slrTable[{37, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 54};

        slrTable[{38, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::IF}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::OR}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::AND}] = {symbol::Type::Shift, 76};
        slrTable[{38, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::program}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::statement}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::type}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::block}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::expression}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::logic_and_prime}] = {symbol::Type::Goto, 75};
        slrTable[{38, symbol::Symbol::equality}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::term}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::factor}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::unary}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::call}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::argList}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::primary}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::var}] = {symbol::Type::Reduce, 57};
        slrTable[{38, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 57};

        slrTable[{39, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::IF}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::OR}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::AND}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Shift, 78};
        slrTable[{39, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Shift, 79};
        slrTable[{39, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::LESS}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::GREATER}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::program}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::statement}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::type}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::block}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::expression}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::equality}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::equality_prime}] = {symbol::Type::Goto, 77};
        slrTable[{39, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::comparison_prime}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::term}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::factor}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::unary}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::call}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::argList}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::primary}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::var}] = {symbol::Type::Reduce, 61};
        slrTable[{39, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 61};

        slrTable[{40, symbol::Symbol::DOLLAR}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::LEFT_BRACKET}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::RIGHT_BRACE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::LEFT_PAREN}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::REAL_}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::STRING}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::BOOL}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::IDENTIFIER}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::CONTINUE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::SEMICOLON}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::BREAK}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::FALSE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::VAR}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::DOUBLE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::LEFT_BRACE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::RETURN}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::WHILE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::NIL}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::STRING_}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::TRUE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::MINUS}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::INTEGER}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::REPEAT}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::IF}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::CHAR}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::INT_}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::FOR}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::NOT}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::UNTIL}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::ELSE}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::COMMA}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::RIGHT_PAREN}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::RIGHT_BRACKET}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::OR}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::AND}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::NOT_EQUAL}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::EQUAL_EQUAL}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::LESS_EQUAL}] = {symbol::Type::Shift, 84};
        slrTable[{40, symbol::Symbol::LESS}] = {symbol::Type::Shift, 83};
        slrTable[{40, symbol::Symbol::GREATER_EQUAL}] = {symbol::Type::Shift, 82};
        slrTable[{40, symbol::Symbol::GREATER}] = {symbol::Type::Shift, 81};
        slrTable[{40, symbol::Symbol::PLUS}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::DIV}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::STAR}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::MOD}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::DOUBLE_ADD}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::DOUBLE_MINUS}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::EQUAL}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::FUNCTION}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::program}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::declarations}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::declaration}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::statement}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::breakStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::continueStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::returnStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::funDecl}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::varDecl}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::varDef}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::varDefs}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::varInit}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::type}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::ifStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::elseBranch}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::exprStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::whileStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::forStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::block}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::repeatStmt}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::paramList}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::parameters}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::parameter}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::expression}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::assignment}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::logic_or}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::logic_or_prime}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::logic_and}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::logic_and_prime}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::equality}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::equality_prime}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::comparison}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::comparison_prime}] = {symbol::Type::Goto, 80};
        slrTable[{40, symbol::Symbol::term}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::term_prime}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::factor}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::factor_prime}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::incr_exp}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::incr_op}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::unary}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::call}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::call_suffix}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::argList}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::arguments}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::primary}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::constVal}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::var}] = {symbol::Type::Reduce, 67};
        slrTable[{40, symbol::Symbol::varSuffix}] = {symbol::Type::Reduce, 67};

    };
}